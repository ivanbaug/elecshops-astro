---
import { apiUrl } from "../config";
---

<div class="container mx-auto relative overflow-x-auto shadow-md">

  <table role="grid" class="w-full text-sm text-left text-gray-500 dark:text-gray-400">
      <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
        <tr>
          <th scope="col" class="px-6 py-3">SKU</th>
          <th scope="col" class="px-6 py-3">Description</th>
          <th scope="col" class="px-6 py-3">Stock</th>
          <th scope="col" class="px-6 py-3">Price</th>
          <th scope="col" class="px-6 py-3">Store</th>
          <!-- <th scope="col">Last Update</th>
          <th scope="col">Num. Updates</th> -->
        </tr>
      </thead>
      <tbody id="tableBody" class="bg-white border-b dark:bg-gray-900 dark:border-gray-700" data-api_url={ apiUrl }>
      </tbody>
    </table>
</div>

  <script >
    interface Product {
      url: string;
      sku: string;
      description: string;
      stock: number;
      price:number;
      id_store: number;
      last_update: Date;
      num_updates: number;
      store: string;
    }

    function updateTable(products: Product[]) {
        if(tbody!=null) {
            tbody.innerHTML = "";

            products.forEach((product, i:number) => {
                const row = tbody.insertRow(i);
                row.className = i % 2 === 0 ? "bg-white border-b dark:bg-gray-900 dark:border-gray-700" : "border-b bg-gray-50 dark:bg-gray-800 dark:border-gray-700";
                const c0 = row.insertCell(0);
                c0.className = "px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white";
                const c1 = row.insertCell(1);
                const c2 = row.insertCell(2);
                const c3 = row.insertCell(3);
                const c4 = row.insertCell(4);
                c0.innerHTML = '<a href="'+product.url+'">'+product.sku+'</a>';
                c1.innerHTML = product.description;
                c2.innerHTML = ''+product.stock;
                c3.innerHTML = ''+product.price;
                c4.innerHTML = ''+product.id_store;
            })
        } 
    }

    const tbody = document.getElementById("tableBody") as HTMLTableElement;
    if(tbody!=null) {
      const apiUrl = tbody.dataset.api_url;
      const response = await fetch(apiUrl+'/products/')
      const products = await response.json() as Product[];
      updateTable(products)
    }
  </script>